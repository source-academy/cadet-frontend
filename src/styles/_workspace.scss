$code-color-code: #ced9e0;
$code-color-log: #dd8c60;
$code-color-result: #ffffff;
$code-color-error: #ff4444;

.workspace {
  height: 100%;
  background-color: $cadet-color-1;
  display: flex;
  padding-top: 0.5rem;
  flex: 1 1 auto;
  flex-direction: column;

  .row {
    margin-right: 0px;
    margin-left: 0px;
  }

  .Switch {
    position: relative;
    width: 3rem;
    height: 1rem;
    left: 1rem;
    right: 1rem;
    top: 0.5rem;
  }

  .ControlBar {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-left: 0.5rem;
    margin-right: 0.5rem;
    margin-bottom: 0.6rem;
  }

  .workspace-parent {
    height: 100%;
    width: 100%;
    display: flex;
    flex: 1 1 100%;
    flex-direction: row;
    overflow: hidden;

    > div {
      height: inherit; // Fix for Firefox not autoscrolling when repl overflows
    }
  }

  .right-parent {
    display: flex;
    flex-direction: column;
    flex: 1 1;
    height: 100%;
    padding-bottom: 0.6rem;
    overflow: auto;
  }

  .left-parent {
    display: flex;
    flex-direction: row;
    height: 100%;
    padding-bottom: 0.6rem;
  }

  .editor-content {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .editor-content-divider {
    flex: initial;
  }

  .editor-divider {
    flex: initial;
  }

  .resize-editor-prepend {
    padding-bottom: 0.2rem;
  }

  .Editor {
    display: flex;
    flex-direction: column;
    height: auto;
    margin: 0 0.6rem 0.6rem 0.6rem;
    padding-bottom: 0.6rem;
    padding-left: 0.6rem;

    .editor-react-ace {
      flex: 1;
      height: 100%;

      #brace-editor {
        height: 100%;
      }
    }

    .editor-prepend-react-ace {
      flex: 1;

      #brace-editor {
        height: 100%;
      }
    }

    .ace_gutter-cell_hi {
      background-color: blue;
    }

    .ace_line_hi {
      background-color: blue;
    }

    .ace_breakpoint:before {
      content: ' \25CF';
      margin-left: -10px;
      color: red;
    }
  }

  .MCQChooser {
    flex: 1 1;
    margin: 0 0.5rem 0 0.5rem;
    overflow: hidden;

    .mcq-content-parent {
      height: 100%;
      overflow: auto;
      padding: 20px;

      .mcq-options-parent {
        height: 100%;

        .mcq-option {
          padding: 20px;
        }

        .mcq-option:focus {
          outline: 0;
        }
      }
    }

    .#{$ns}-card {
      background-color: $cadet-color-2;
    }

    .Text {
      word-break: break-word;
      word-wrap: break-word;
    }
  }

  .resize-side-content {
    display: flex;
    flex-direction: column;
  }

  .resize-editor-content {
    display: flex;
    flex-direction: column;
  }

  .side-content-header {
    align-items: center;
    display: flex;
    flex: none;
    flex-wrap: wrap;
    justify-content: center;
    padding-bottom: 0.2rem;
    .side-content-header-button:focus {
      outline: 0;
    }

    .side-content-header-button-alert {
      -webkit-animation: alert 1s infinite;
      -moz-animation: alert 1s infinite;
      -o-animation: alert 1s infinite;
      animation: alert 1s infinite;
    }

    @-webkit-keyframes alert {
      0%,
      50% {
        background-color: rgba(200, 100, 50, 0.5);
      }
      51%,
      100% {
        background-image: rgba(138, 155, 168, 0.3);
      }
    }
  }

  .side-content-divider {
    height: 0.6rem;
    flex: initial;
  }

  .side-content {
    flex: 1 1 auto;
    height: 100%;
    text-align: justify;
    overflow-y: auto;

    .#{$ns}-card {
      background-color: $cadet-color-2;
      color: $code-color-result;
      display: flex;
      flex-direction: column;
      height: 100%;
      margin: 0 0.5rem 0 0;
      /* Fix card not wrapping content on OSX, Chrome */
      overflow-y: auto;
      padding: 0.4rem 0.6rem 0.4rem 0.6rem;
    }
  }

  .side-content-text {
    height: fit-content;
    /* word-wrap and word-break are added to make text wrap. */
    word-wrap: break-word;
    word-break: break-word;

    div {
      p:last-child {
        margin-bottom: 0;
      }
    }
  }

  .grading-editor-input-parent {
    /* Position the editor away from the buttons */
    /* Cause the 'save' button shift down when size is small. */
    margin-bottom: 0.5rem;

    .#{$ns}-button-group {
      flex-wrap: wrap;
    }

    .#{$ns}-numeric-input {
      .#{$ns}-button {
        background-color: $cadet-color-2;
      }
    }
  }

  .react-mde {
    /* Color the borders */
    border-color: $cadet-color-5;
    border-radius: 3px;
    /* Override side-content's default text justify*/
    text-align: initial;

    .mde-header {
      /* Color the toolbar */
      background-color: $cadet-color-5;
    }

    /**
     * Color code blocks. style is forced due to deep nesting,
     * and no access to the generated html to place classes.
     */
    .mde-preview .mde-preview-content pre {
      background-color: $cadet-color-5 !important;
      code {
        color: black !important;
      }
    }
  }

  .resize-editor {
    display: flex;
    flex-direction: row;

    .Editor {
      flex: 1 1 auto;
      margin: 0 0.5rem 0 0.5rem;
      padding: 0;
    }

    .editor-content {
      flex: 1 1 auto;
      padding: 0;
    }
  }

  .bp3-divider {
    margin: 0 0 0.5rem 0;
  }

  .Repl {
    display: flex;
    flex: 1 1;
    flex-direction: column;
    overflow-x: visible;
    overflow-y: visible;

    .#{$ns}-card {
      background-color: $cadet-color-2;
      padding: 0.4rem 0.6rem 0.4rem 0.6rem;
      margin: 0 0.5rem 0.5rem 0;

      pre {
        background-color: transparent;
        box-shadow: none;
        color: inherit;
        padding: 0px;
        margin: 0px;
        /* white-space, word-wrap and word-break
         * are specified to allow all output to wrap.
         */
        white-space: pre-wrap;
        word-wrap: break-word;
        word-break: break-word;
        /**
 * Use same fonts as ace-editor for
 * output. Taken from react-ace
 * sourcecode, font size modified.
 */
        font: 14px / normal 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro',
          monospace;
      }

      .codeOutput {
        color: $code-color-code;
      }

      .logOutput {
        color: $code-color-log;
      }

      .resultOutput {
        color: $code-color-result;

        .canvas-container {
          display: flex;
          padding: 0.5rem 0 0.5rem 0;
          align-items: center;
          justify-content: center;
        }

        canvas {
          height: 20rem;
          width: 20rem;
        }
      }

      .errorOutput {
        color: $code-color-error;
      }
    }

    /* flush to align with editor bottom */
    .repl-input-parent {
      padding: 0;
      margin-bottom: 0rem;
    }

    .repl-react-ace {
      margin: 0.4rem 0.6rem 0.4rem 0.6rem;
    }
  }

  .react-ace {
    background-color: $cadet-color-2;
    border-radius: 3px;
    .ace_gutter {
      background: $cadet-color-3;
      color: rgb(128, 145, 160);
    }
  }

  .Autograder {
    > .collapse-button {
      width: 100%;
      background: rgba(0, 0, 0, 0.2);
    }

    pre {
      color: $code-color-code;
    }

    .noResults {
      padding-top: 0.4rem;
      padding-bottom: 0.4rem;
    }
  }

  .AutograderCard {
    @keyframes correct {
      from {
        background: rgba(125, 255, 125, 0.5);
      }

      to {
        background: rgba(125, 255, 125, 0.2);
      }
    }

    @keyframes wrong {
      from {
        background: rgba(255, 55, 55, 0.5);
      }

      to {
        background: rgba(255, 55, 55, 0.2);
      }
    }

    &.wrong {
      > .#{$ns}-card {
        background: rgba(255, 55, 55, 0.2);
        animation-name: wrong;
        animation-duration: 4s;
      }

      .autograder-actual {
        pre {
          color: $code-color-error;
        }
      }
    }

    &.correct {
      > .#{$ns}-card {
        background: rgba(125, 255, 125, 0.2);
        animation-name: correct;
        animation-duration: 4s;
      }
    }

    &:not(:first-child) {
      border-top-style: solid;
      border-top-width: 2px;
      border-color: #1a2530;
    }

    .#{$ns}-button {
      border-color: rgb(26, 37, 48);
      border-style: solid;
      border-width: 1px;
    }

    .#{$ns}-card {
      margin: 0 0 0 0;
    }

    .row {
      padding-top: 0.2rem;
      padding-bottom: 0.2rem;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;

      > pre {
        flex: 1 1 auto;
      }
    }

    .col {
      width: 50%;
    }

    .autograder-expected {
      padding-right: 0.2rem;
    }
    .autograder-actual {
      padding-left: 0.2rem;
    }
  }

  .ResultCard {
    &:not(:first-child) {
      border-top-style: solid;
      border-top-width: 2px;
      border-color: #1a2530;
    }

    &.wrong {
      > .#{$ns}-card {
        background: rgba(255, 55, 55, 0.2);
      }
    }

    &.correct {
      > .#{$ns}-card {
        background: rgba(125, 255, 125, 0.2);
      }
    }

    .#{$ns}-card {
      margin: 0 0 0 0;
    }

    .row {
      padding-top: 0.2rem;
      padding-bottom: 0.2rem;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;

      > pre {
        flex: 1 1 auto;
        margin-left: 0.4rem;
      }
    }

    .col {
      width: 50%;
    }

    .autograder-expected {
      padding-right: 0.2rem;
    }
    .autograder-actual {
      padding-left: 0.2rem;
    }

    .autograder-error {
      width: 100%;

      &:not(:first-child) {
        border-top-style: solid;
        border-top-width: 2px;
        border-color: #1a2530;
      }
    }

    .error-explanation {
      pre {
        color: $code-color-error;
      }
    }
  }
}

.Popover-share {
  .#{$ns}-popover-arrow-fill {
    fill: $cadet-color-4;
  }

  .#{$ns}-popover-content {
    background: $cadet-color-4;
    display: flex;
    padding: 0.4rem 0.8rem 0.4rem 0.8rem;

    input {
      width: 25rem;
      margin-right: 0.58em;
      &:focus {
        outline: none;
      }
    }

    button {
      padding: 5px 5px 5px 10px;
    }
  }
}

/* otherwise, a thick outline will show on click due to react-hotkeys */
.workspace:focus {
  outline: 0;
}
