// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AchievementEditor component renders correctly 1`] = `
"<AchievementEditor inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
  <div className=\\"achievement-editor\\">
    <div className=\\"achievement-command\\">
      <AchievementAdder inferencer={{...}} adderId={-1} setAdderId={[Function: bound dispatchAction]}>
        <Blueprint3.Button className=\\"main-adder\\" onClick={[Function: handleAddAchievement]} text=\\"Add A New Item\\" disabled={false}>
          <button type=\\"button\\" className=\\"bp3-button main-adder\\" onClick={[Function: handleAddAchievement]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
            <Blueprint3.Icon icon={[undefined]} />
            <span className=\\"bp3-button-text\\">
              Add A New Item
            </span>
            <Blueprint3.Icon icon={[undefined]} />
          </button>
        </Blueprint3.Button>
      </AchievementAdder>
    </div>
    <ul className=\\"achievement-container\\">
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Rune Master\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/rune-master-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Rune Master\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Rune Master\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Rune Master
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={[undefined]} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Beyond the Second Dimension\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/btsd-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Beyond the Second Dimension\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Beyond the Second Dimension\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Beyond the Second Dimension
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={{...}} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Colorful Carpet\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/colorful-carpet-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Colorful Carpet\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Colorful Carpet\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Colorful Carpet
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={{...}} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text bp3-editable-text-placeholder\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Enter your title here
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={[undefined]} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Curve Wizard\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/curve-wizard-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Curve Wizard\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Curve Wizard\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Curve Wizard
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={{...}} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Curve Introduction\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/curve-introduction-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Curve Introduction\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Curve Introduction\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Curve Introduction
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={{...}} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Curve Manipulation\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/curve-manipulation-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Curve Manipulation\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Curve Manipulation\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Curve Manipulation
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Core\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Core\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Core
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={{...}} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"The Source-rer\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/the-source-rer-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"The Source-rer\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"The Source-rer\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            The Source-rer
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Effort\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Effort\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Effort
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={{...}} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Power of Friendship\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/power-of-friendship-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Power of Friendship\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Power of Friendship\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Power of Friendship
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Community\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Community\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Community
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={[undefined]} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Piazza Guru\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/piazza-guru-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Piazza Guru\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Piazza Guru\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Piazza Guru
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Community\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Community\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Community
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={[undefined]} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"That\\\\'s the Spirit\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/thats-the-spirit-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"That\\\\'s the Spirit\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"That\\\\'s the Spirit\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            That&#39;s the Spirit
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Exploration\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Exploration\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Exploration
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={[undefined]} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
      <EditableAchievementCard achievement={{...}} inferencer={{...}} updateAchievements={[Function: updateAchievements]} editAchievement={[Function: editAchievement]} forceRender={[Function: forceRender]} adderId={-1} setAdderId={[Function: bound dispatchAction]} addUnsavedChange={[Function: addUnsavedChange]} removeUnsavedChange={[Function: removeUnsavedChange]} removeGoal={[Function: removeGoal]} removeAchievement={[Function: removeAchievement]}>
        <Blueprint3.Card className=\\"editable-achievement\\" style={{...}} elevation={0} interactive={false}>
          <div className=\\"bp3-card bp3-elevation-0 editable-achievement\\" style={{...}}>
            <div className=\\"top-bar\\">
              <EditableAchievementView title=\\"Kool Kidz\\" view={{...}} changeView={[Function: handleChangeView]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit View\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit View
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit View\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementView>
              <AchievementUploader hasChanges={false} saveChanges={[Function: handleSaveChanges]} discardChanges={[Function: handleDiscardChanges]} pendingUpload={false} uploadChanges={[Function: handleUploadChanges]} />
            </div>
            <div className=\\"main\\">
              <EditableAchievementBackground cardTileUrl=\\"https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/achievement/card-tile/annotated-tile.png\\" setcardTileUrl={[Function: handleChangeBackground]}>
                <div>
                  <div>
                    <Blueprint3.Button text=\\"Edit Background\\" onClick={[Function: onClick]}>
                      <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                        <Blueprint3.Icon icon={[undefined]} />
                        <span className=\\"bp3-button-text\\">
                          Edit Background
                        </span>
                        <Blueprint3.Icon icon={[undefined]} />
                      </button>
                    </Blueprint3.Button>
                  </div>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Background\\" usePortal={false} canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" />
                  </Blueprint3.Dialog>
                </div>
              </EditableAchievementBackground>
              <div className=\\"display\\">
                <EditableAchievementTitle title=\\"Kool Kidz\\" changeTitle={[Function: handleChangeTitle]}>
                  <div>
                    <h1>
                      <Blueprint3.EditableText placeholder=\\"Enter your title here\\" value=\\"Kool Kidz\\" onChange={[Function: handleChangeTitle]} alwaysRenderInput={false} confirmOnEnterKey={false} defaultValue=\\"\\" disabled={false} maxLines={Infinity} minLines={1} minWidth={80} multiline={false} type=\\"text\\">
                        <div className=\\"bp3-editable-text\\" onFocus={[Function (anonymous)]} tabIndex={0}>
                          <span className=\\"bp3-editable-text-content\\" style={{...}}>
                            Kool Kidz
                          </span>
                        </div>
                      </Blueprint3.EditableText>
                    </h1>
                  </div>
                </EditableAchievementTitle>
                <div className=\\"details\\">
                  <EditableAchievementAbility ability=\\"Flex\\" changeAbility={[Function: handleChangeAbility]}>
                    <div className=\\"ability\\">
                      <Blueprint3.Select className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function: handleChangeAbility]} itemRenderer={[Function: abilityRenderer]} filterable={false}>
                        <Blueprint3.QueryList className=\\"bp3-minimal\\" items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: abilityRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                          <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"bp3-minimal\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper bp3-minimal\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                          <div>
                                            <Blueprint3.Button className=\\"bp3-minimal\\" text=\\"Flex\\">
                                              <button type=\\"button\\" className=\\"bp3-button bp3-minimal\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                <Blueprint3.Icon icon={[undefined]} />
                                                <span className=\\"bp3-button-text\\">
                                                  Flex
                                                </span>
                                                <Blueprint3.Icon icon={[undefined]} />
                                              </button>
                                            </Blueprint3.Button>
                                          </div>
                                        </div>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </Blueprint3.QueryList>
                      </Blueprint3.Select>
                    </div>
                  </EditableAchievementAbility>
                  <EditableAchievementDate type=\\"Deadline\\" deadline={[undefined]} changeDeadline={[Function: handleChangeDeadline]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Deadline
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Deadline\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                  <EditableAchievementDate type=\\"Release\\" deadline={[undefined]} changeDeadline={[Function: handleChangeRelease]}>
                    <div className=\\"deadline\\">
                      <div className=\\"deadline-details\\">
                        <div>
                          <Blueprint3.Popover interactionKind=\\"hover\\" position=\\"top\\" boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                            <Manager>
                              <span className=\\"bp3-popover-wrapper\\">
                                <Reference innerRef={[Function: target]}>
                                  <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                    <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                      <span onBlur={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                        <Blueprint3.Button onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                          <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button\\" disabled={[undefined]} tabIndex={0} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]}>
                                            <Blueprint3.Icon icon={[undefined]} />
                                            <span className=\\"bp3-button-text\\">
                                              Change Release
                                            </span>
                                            <Blueprint3.Icon icon={[undefined]} />
                                          </button>
                                        </Blueprint3.Button>
                                      </span>
                                    </Blueprint3.ResizeSensor>
                                  </InnerReference>
                                </Reference>
                                <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                              </span>
                            </Manager>
                          </Blueprint3.Popover>
                        </div>
                      </div>
                      <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true}>
                        <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} title=\\"Edit Achievement Release\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                      </Blueprint3.Dialog>
                    </div>
                  </EditableAchievementDate>
                </div>
              </div>
              <div className=\\"details\\">
                <AchievementDeleter deleteAchievement={[Function: handleDeleteAchievement]}>
                  <Blueprint3.Button icon=\\"trash\\" text=\\"Delete Achievement\\" intent=\\"danger\\" onClick={[Function: onClick]}>
                    <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-intent-danger\\" disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon=\\"trash\\">
                        <span icon=\\"trash\\" className=\\"bp3-icon bp3-icon-trash\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"trash\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              trash
                            </desc>
                            <path d=\\"M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                      <span className=\\"bp3-button-text\\">
                        Delete Achievement
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                  <Blueprint3.Dialog onClose={[Function: onClose]} isOpen={false} className=\\"task-selector\\" title=\\"Confirm Delete\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: onClose]} isOpen={false} className=\\"bp3-overlay-scroll-container\\" title=\\"Confirm Delete\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementDeleter>
              </div>
            </div>
          </div>
        </Blueprint3.Card>
      </EditableAchievementCard>
    </ul>
  </div>
</AchievementEditor>"
`;
