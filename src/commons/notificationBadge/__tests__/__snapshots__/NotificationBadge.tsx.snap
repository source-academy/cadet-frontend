// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Badge does not render with no notifications 1`] = `"<NotificationBadge notifications={{...}} handleAcknowledgeNotifications={[Function: handleAcknowledgeNotifications]} />"`;

exports[`Badge renders properly with notifications 1`] = `
"<NotificationBadge notifications={{...}} handleAcknowledgeNotifications={[Function: handleAcknowledgeNotifications]}>
  <Blueprint3.Popover className={[undefined]} content={{...}} interactionKind=\\"hover\\" position=\\"right\\" hoverOpenDelay={50} hoverCloseDelay={50} lazy={true} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
    <Manager>
      <span className=\\"bp3-popover-wrapper\\">
        <Reference innerRef={[Function: target]}>
          <InnerReference setReferenceNode={[Function]} innerRef={[Function: target]}>
            <Blueprint3.ResizeSensor onResize={[Function]}>
              <span onBlur={[Function]} onFocus={[Function]} onMouseEnter={[Function]} onMouseLeave={[Function]} className=\\"bp3-popover-target\\">
                <Blueprint3.Tag intent=\\"danger\\" round={true} large={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                  <span disabled={[undefined]} className=\\"bp3-tag bp3-intent-danger bp3-round\\" tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <Blueprint3.Text className=\\"bp3-fill\\" ellipsize={true} tagName=\\"span\\">
                      <span className=\\"bp3-text-overflow-ellipsis bp3-fill\\" title={[undefined]}>
                        4
                      </span>
                    </Blueprint3.Text>
                    <Blueprint3.Icon icon={[undefined]} />
                  </span>
                </Blueprint3.Tag>
              </span>
            </Blueprint3.ResizeSensor>
          </InnerReference>
        </Reference>
        <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
      </span>
    </Manager>
  </Blueprint3.Popover>
</NotificationBadge>"
`;

exports[`Badge with filter, filterNotificationsByAssessment renders properly 1`] = `
"<NotificationBadge notifications={{...}} handleAcknowledgeNotifications={[Function: handleAcknowledgeNotifications]} notificationFilter={[Function]}>
  <Blueprint3.Popover className={[undefined]} content={{...}} interactionKind=\\"hover\\" position=\\"right\\" hoverOpenDelay={50} hoverCloseDelay={50} lazy={true} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
    <Manager>
      <span className=\\"bp3-popover-wrapper\\">
        <Reference innerRef={[Function: target]}>
          <InnerReference setReferenceNode={[Function]} innerRef={[Function: target]}>
            <Blueprint3.ResizeSensor onResize={[Function]}>
              <span onBlur={[Function]} onFocus={[Function]} onMouseEnter={[Function]} onMouseLeave={[Function]} className=\\"bp3-popover-target\\">
                <Blueprint3.Tag intent=\\"danger\\" round={true} large={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                  <span disabled={[undefined]} className=\\"bp3-tag bp3-intent-danger bp3-round\\" tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <Blueprint3.Text className=\\"bp3-fill\\" ellipsize={true} tagName=\\"span\\">
                      <span className=\\"bp3-text-overflow-ellipsis bp3-fill\\" title={[undefined]}>
                        4
                      </span>
                    </Blueprint3.Text>
                    <Blueprint3.Icon icon={[undefined]} />
                  </span>
                </Blueprint3.Tag>
              </span>
            </Blueprint3.ResizeSensor>
          </InnerReference>
        </Reference>
        <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
      </span>
    </Manager>
  </Blueprint3.Popover>
</NotificationBadge>"
`;

exports[`Badge with filter, filterNotificationsByAssessment renders properly 2`] = `
"<NotificationBadge notifications={{...}} handleAcknowledgeNotifications={[Function: handleAcknowledgeNotifications]} notificationFilter={[Function]}>
  <Blueprint3.Popover className={[undefined]} content={{...}} interactionKind=\\"hover\\" position=\\"right\\" hoverOpenDelay={50} hoverCloseDelay={50} lazy={true} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
    <Manager>
      <span className=\\"bp3-popover-wrapper\\">
        <Reference innerRef={[Function: target]}>
          <InnerReference setReferenceNode={[Function]} innerRef={[Function: target]}>
            <Blueprint3.ResizeSensor onResize={[Function]}>
              <span onBlur={[Function]} onFocus={[Function]} onMouseEnter={[Function]} onMouseLeave={[Function]} className=\\"bp3-popover-target\\">
                <Blueprint3.Tag intent=\\"danger\\" round={true} large={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                  <span disabled={[undefined]} className=\\"bp3-tag bp3-intent-danger bp3-round\\" tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <Blueprint3.Text className=\\"bp3-fill\\" ellipsize={true} tagName=\\"span\\">
                      <span className=\\"bp3-text-overflow-ellipsis bp3-fill\\" title={[undefined]}>
                        4
                      </span>
                    </Blueprint3.Text>
                    <Blueprint3.Icon icon={[undefined]} />
                  </span>
                </Blueprint3.Tag>
              </span>
            </Blueprint3.ResizeSensor>
          </InnerReference>
        </Reference>
        <Blueprint3.Overlay autoFocus={true} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={false} className={[undefined]} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
      </span>
    </Manager>
  </Blueprint3.Popover>
</NotificationBadge>"
`;

exports[`Badge with filter, filterNotificationsBySubmission renders properly 1`] = `"<NotificationBadge notifications={{...}} handleAcknowledgeNotifications={[Function: handleAcknowledgeNotifications]} notificationFilter={[Function]} />"`;
