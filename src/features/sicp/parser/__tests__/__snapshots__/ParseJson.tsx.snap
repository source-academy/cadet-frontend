// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parse array no child successful 1`] = `""`;

exports[`Parse array one child successful 1`] = `"Mock Text"`;

exports[`Parse array two child successful 1`] = `
"Mock Text


Mock Text"
`;

exports[`Parse epigraph EPIGRAPH with all successful 1`] = `
"<Component className=\\"sicp-epigraph\\">
  <blockquote className=\\"bp3-blockquote sicp-epigraph\\">
    Mock Text
    <div className=\\"sicp-attribution\\">
      -
      Author
      <i>
        Title
      </i>
      2021
    </div>
  </blockquote>
</Component>"
`;

exports[`Parse epigraph EPIGRAPH with author successful 1`] = `
"<Component className=\\"sicp-epigraph\\">
  <blockquote className=\\"bp3-blockquote sicp-epigraph\\">
    Mock Text
    <div className=\\"sicp-attribution\\">
      -
      Author
    </div>
  </blockquote>
</Component>"
`;

exports[`Parse epigraph EPIGRAPH with date successful 1`] = `
"<Component className=\\"sicp-epigraph\\">
  <blockquote className=\\"bp3-blockquote sicp-epigraph\\">
    Mock Text
    <div className=\\"sicp-attribution\\">
      -
      2021
    </div>
  </blockquote>
</Component>"
`;

exports[`Parse epigraph EPIGRAPH with none successful 1`] = `
"<Component className=\\"sicp-epigraph\\">
  <blockquote className=\\"bp3-blockquote sicp-epigraph\\">
    Mock Text
  </blockquote>
</Component>"
`;

exports[`Parse epigraph EPIGRAPH with title successful 1`] = `
"<Component className=\\"sicp-epigraph\\">
  <blockquote className=\\"bp3-blockquote sicp-epigraph\\">
    Mock Text
    <div className=\\"sicp-attribution\\">
      -
      <i>
        Title
      </i>
    </div>
  </blockquote>
</Component>"
`;

exports[`Parse exercise EXERCISE with solution successful 1`] = `
"<div>
  <div />
  <SicpExercise title={[undefined]} body={{...}} solution={{...}}>
    <Blueprint3.Card className=\\"sicp-exercise\\" interactive={false} elevation={1}>
      <div className=\\"bp3-card bp3-elevation-1 sicp-exercise\\">
        <b />
        <div />
        <div className=\\"sicp-button-container\\">
          <Blueprint3.Button onClick={[Function: onClick]} large={true} className=\\"sicp-show-solution-button\\">
            <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-large sicp-show-solution-button\\" disabled={[undefined]} onBlur={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
              <Blueprint3.Icon icon={[undefined]} />
              <span className=\\"bp3-button-text\\">
                Show Solution
              </span>
              <Blueprint3.Icon icon={[undefined]} />
            </button>
          </Blueprint3.Button>
        </div>
        <Blueprint3.Collapse className=\\"sicp-solution\\" isOpen={false} component=\\"div\\" keepChildrenMounted={false} transitionDuration={200}>
          <div className=\\"bp3-collapse sicp-solution\\" style={{...}}>
            <div className=\\"bp3-collapse-body\\" style={{...}} aria-hidden={false} />
          </div>
        </Blueprint3.Collapse>
      </div>
    </Blueprint3.Card>
  </SicpExercise>
</div>"
`;

exports[`Parse exercise EXERCISE without solution successful 1`] = `
"<div>
  <div />
  <SicpExercise title=\\"Title\\" body={{...}} solution={[undefined]}>
    <Blueprint3.Card className=\\"sicp-exercise\\" interactive={false} elevation={1}>
      <div className=\\"bp3-card bp3-elevation-1 sicp-exercise\\">
        <b>
          Title
        </b>
        <div>
          Mock Text
        </div>
        <div className=\\"sicp-button-container\\">
          <Blueprint3.Button onClick={[Function: onClick]} large={true} className=\\"sicp-show-solution-button\\">
            <button type=\\"button\\" onClick={[Function: onClick]} className=\\"bp3-button bp3-large sicp-show-solution-button\\" disabled={[undefined]} onBlur={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
              <Blueprint3.Icon icon={[undefined]} />
              <span className=\\"bp3-button-text\\">
                Show Solution
              </span>
              <Blueprint3.Icon icon={[undefined]} />
            </button>
          </Blueprint3.Button>
        </div>
        <Blueprint3.Collapse className=\\"sicp-solution\\" isOpen={false} component=\\"div\\" keepChildrenMounted={false} transitionDuration={200}>
          <div className=\\"bp3-collapse sicp-solution\\" style={{...}}>
            <div className=\\"bp3-collapse-body\\" style={{...}} aria-hidden={false} />
          </div>
        </Blueprint3.Collapse>
      </div>
    </Blueprint3.Card>
  </SicpExercise>
</div>"
`;

exports[`Parse figures FIGURE with image and scale successful 1`] = `
"<div className=\\"sicp-figure\\">
  <div />
  <img src=\\"https://source-academy.github.io/sicp/sicp.png\\" alt=\\"id\\" width=\\"50%\\" />
  <h5 className=\\"sicp-caption\\">
    name
    Mock Text
  </h5>
</div>"
`;

exports[`Parse figures FIGURE with image successful 1`] = `
"<div className=\\"sicp-figure\\">
  <div />
  <img src=\\"https://source-academy.github.io/sicp/sicp.png\\" alt=\\"id\\" width=\\"100%\\" />
  <h5 className=\\"sicp-caption\\">
    name
    Mock Text
  </h5>
</div>"
`;

exports[`Parse figures FIGURE with snippet successful 1`] = `
"<div className=\\"sicp-figure\\">
  <div />
  <Component body=\\"1 + 1;\\" id={[undefined]} initialEditorValueHash={[undefined]} prependLength={[undefined]} output={[undefined]}>
    <div>
      Code Snippet
    </div>
  </Component>
  <h5 className=\\"sicp-caption\\">
    name
    Mock Text
  </h5>
</div>"
`;

exports[`Parse figures FIGURE with table successful 1`] = `
"<div className=\\"sicp-figure\\">
  <div />
  <table>
    <tbody>
      <tr>
        <td>
          Mock Text
        </td>
        <td>
          Mock Text
        </td>
      </tr>
      <tr>
        <td>
          Mock Text
        </td>
        <td>
          Mock Text
        </td>
      </tr>
    </tbody>
  </table>
  <h5 className=\\"sicp-caption\\">
    name
    Mock Text
  </h5>
</div>"
`;

exports[`Parse footnote DISPLAYFOOTNOTE count is 1 successful 1`] = `
"<hr />


<div className=\\"sicp-footnote\\">
  <div />
  <a href=\\"\\">
    [1] 
  </a>
  Mock Text
</div>"
`;

exports[`Parse footnote DISPLAYFOOTNOTE count is 2 successful 1`] = `
"<div className=\\"sicp-footnote\\">
  <div />
  <a href=\\"\\">
    [2] 
  </a>
  Mock Text
</div>"
`;

exports[`Parse heading SUBHEADING  successful 1`] = `
"<h2 className=\\"bp3-heading\\">
  Mock Text
</h2>"
`;

exports[`Parse heading SUBSUBHEADING  successful 1`] = `
"<h4 className=\\"bp3-heading\\">
  <br />
  Mock Text
</h4>"
`;

exports[`Parse latex LATEX block successful 1`] = `
"<SicpLatex math=\\"\\\\\\\\[test\\\\\\\\]\\">
  <Latex delimiters={{...}} strict={false}>
    <span className=\\"__Latex__\\" dangerouslySetInnerHTML={{...}} />
  </Latex>
</SicpLatex>"
`;

exports[`Parse latex LATEX inline successful 1`] = `
"<SicpLatex math=\\"$test$\\">
  <Latex delimiters={{...}} strict={false}>
    <span className=\\"__Latex__\\" dangerouslySetInnerHTML={{...}} />
  </Latex>
</SicpLatex>"
`;

exports[`Parse links FOOTNOTE_REF successful 1`] = `
"<BrowserRouter>
  <Router history={{...}}>
    <sup>
      <Link to=\\"bad-link\\">
        <LinkAnchor href=\\"/bad-link\\" navigate={[Function: navigate]}>
          <a href=\\"/bad-link\\" onClick={[Function: onClick]}>
            link
          </a>
        </LinkAnchor>
      </Link>
    </sup>
  </Router>
</BrowserRouter>"
`;

exports[`Parse links LINK successful 1`] = `
"<BrowserRouter>
  <Router history={{...}}>
    <a href=\\"bad-link\\">
      link
    </a>
  </Router>
</BrowserRouter>"
`;

exports[`Parse links REF successful 1`] = `
"<BrowserRouter>
  <Router history={{...}}>
    <Link to=\\"bad-link\\">
      <LinkAnchor href=\\"/bad-link\\" navigate={[Function: navigate]}>
        <a href=\\"/bad-link\\" onClick={[Function: onClick]}>
          link
        </a>
      </LinkAnchor>
    </Link>
  </Router>
</BrowserRouter>"
`;

exports[`Parse list OL  successful 1`] = `
"<Component>
  <ol className=\\"bp3-list\\">
    <li>
      Mock Text
    </li>
  </ol>
</Component>"
`;

exports[`Parse list UL  successful 1`] = `
"<Component>
  <ul className=\\"bp3-list\\">
    <li>
      Mock Text
    </li>
  </ul>
</Component>"
`;

exports[`Parse object no tag 1`] = `"Mock Text"`;

exports[`Parse object successful 1`] = `"Mock Text"`;

exports[`Parse reference REFERENCE  successful 1`] = `
"<div className=\\"sicp-reference\\">
  Mock Text
</div>"
`;

exports[`Parse section SECTION  successful 1`] = `
"<div>
  <Component>
    <h1 className=\\"bp3-heading\\">
      Title
    </h1>
  </Component>
  <div>
    <div className=\\"sicp-text\\">
      <div />
      Mock Text
      Mock Text
    </div>
    <br />
    <div className=\\"sicp-text\\">
      <div />
      Mock Text
      Mock Text
    </div>
    <br />
  </div>
</div>"
`;

exports[`Parse snippet SNIPPET no eval successful 1`] = `
"<Component>
  <pre className=\\"bp3-code-block\\">
    const a = 1;
    a+1;
  </pre>
</Component>"
`;

exports[`Parse snippet SNIPPET with latex successful 1`] = `
"<Component>
  <pre className=\\"bp3-code-block\\">
    <SicpLatex math=\\"const a = 1;\\\\na+1;\\">
      <Latex delimiters={{...}} strict={false}>
        <span className=\\"__Latex__\\" dangerouslySetInnerHTML={{...}} />
      </Latex>
    </SicpLatex>
  </pre>
</Component>"
`;

exports[`Parse snippet SNIPPET with prepend successful 1`] = `
"<Component body=\\"const a = 1;\\\\na+1;\\" id=\\"id\\" initialEditorValueHash=\\"MYewdgzgLgBAhjAvDAjAbgFBwNTqA\\" prependLength={1} output={[undefined]}>
  <div>
    Code Snippet
  </div>
</Component>"
`;

exports[`Parse snippet SNIPPET without prepend successful 1`] = `
"<Component body=\\"const a = 1;\\\\na+1;\\" id=\\"id\\" initialEditorValueHash=\\"MYewdgzgLgBAhjAvDAjAbgFBwNTqA\\" prependLength={[undefined]} output={[undefined]}>
  <div>
    Code Snippet
  </div>
</Component>"
`;

exports[`Parse snippet SNIPPET without prepend with output successful 1`] = `
"<Component body=\\"const a = 1;\\\\na+1;\\" id=\\"id\\" initialEditorValueHash=\\"MYewdgzgLgBAhjAvDAjAbgFBwNTqA\\" prependLength={[undefined]} output=\\"2\\">
  <div>
    Code Snippet
  </div>
</Component>"
`;

exports[`Parse styling B  successful 1`] = `
"<b>
  Mock Text
</b>"
`;

exports[`Parse styling EM  successful 1`] = `
"<em>
  Mock Text
</em>"
`;

exports[`Parse styling JAVASCRIPTINLINE  successful 1`] = `
"<Component>
  <code className=\\"bp3-code\\" />
</Component>"
`;

exports[`Parse styling META  successful 1`] = `"<em />"`;

exports[`Parse styling TT  successful 1`] = `
"<Component>
  <code className=\\"bp3-code\\">
    Mock Text
  </code>
</Component>"
`;

exports[`Parse symbol BR  successful 1`] = `"<br />"`;

exports[`Parse table TABLE  successful 1`] = `
"<table>
  <tbody>
    <tr>
      <td>
        Mock Text
      </td>
      <td>
        Mock Text
      </td>
    </tr>
    <tr>
      <td>
        Mock Text
      </td>
      <td>
        Mock Text
      </td>
    </tr>
  </tbody>
</table>"
`;
