// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AchievementControlPanel component renders correctly 1`] = `
"<AchievementControlPanel inferencer={{...}} updateAchievements={[Function: updateAchievements]} forceRender={[Function: forceRender]} isDisabled={false} pendingUpload={[Function: pendingUpload]} setPendingUpload={[Function: setPendingUpload]} saveAchievementsToFrontEnd={[Function: saveAchievementsToFrontEnd]}>
  <div className=\\"sample-cards\\" style={{...}}>
    <ul className=\\"display-list\\">
      <EditableAchievementTask achievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
        <div className=\\"edit-container\\">
          <div className=\\"main-cards\\">
            <AchievementTask id={0} inferencer={{...}} filterStatus=\\"ALL\\" displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
              <li>
                <AchievementCard id={0} inferencer={{...}} shouldPartiallyRender={false} isDropdownOpen={false} toggleDropdown={[Function: toggleDropdown]} displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
                  <div className=\\"achievement-card\\" style={{...}} onClick={[Function: onClick]} onClickCapture={[Function: toggleDropdown]}>
                    <div className=\\"dropdown-button\\">
                      <Blueprint3.Icon icon=\\"caret-right\\">
                        <span icon=\\"caret-right\\" className=\\"bp3-icon bp3-icon-caret-right\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"caret-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              caret-right
                            </desc>
                            <path d=\\"M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 006 4.5v7a.495.495 0 00.83.37l4-3.5c.1-.09.17-.22.17-.37z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                    </div>
                    <div className=\\"content\\">
                      <div className=\\"heading\\">
                        <h3>
                          RUNE MASTER
                        </h3>
                        <AchievementWeek week={[undefined]} intent=\\"warning\\">
                          <div className=\\"week\\">
                            <div />
                          </div>
                        </AchievementWeek>
                      </div>
                      <div className=\\"details\\">
                        <div className=\\"ability\\">
                          <p>
                            Core
                          </p>
                        </div>
                        <AchievementDeadline deadline={{...}} ability=\\"Core\\">
                          <div className=\\"deadline\\">
                            <Blueprint3.Icon icon=\\"stopwatch\\" color=\\"#000000\\">
                              <span icon=\\"stopwatch\\" className=\\"bp3-icon bp3-icon-stopwatch\\" title={[undefined]}>
                                <svg fill=\\"#000000\\" data-icon=\\"stopwatch\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    stopwatch
                                  </desc>
                                  <path d=\\"M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <span style={{...}}>
                              <p>
                                5 Weeks
                              </p>
                            </span>
                          </div>
                        </AchievementDeadline>
                        <AchievementExp exp={600}>
                          <div className=\\"exp\\">
                            <Blueprint3.Icon icon=\\"bank-account\\">
                              <span icon=\\"bank-account\\" className=\\"bp3-icon bp3-icon-bank-account\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"bank-account\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    bank-account
                                  </desc>
                                  <path d=\\"M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <p>
                              600 XP
                            </p>
                          </div>
                        </AchievementExp>
                      </div>
                      <Blueprint3.ProgressBar className=\\"progress\\" intent={[undefined]} value={0.355} animate={false} stripes={false}>
                        <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes progress\\">
                          <div className=\\"bp3-progress-meter\\" style={{...}} />
                        </div>
                      </Blueprint3.ProgressBar>
                    </div>
                  </div>
                </AchievementCard>
              </li>
            </AchievementTask>
          </div>
          <div className=\\"editor-buttons\\">
            <AchievementControlPanelTools editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
              <PrerequisiteAdder editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Add A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Add A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={3} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Add Prerequisite\\" dialogHeader=\\"Add A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to add\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: addAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteAdder>
              <PrerequisiteDeleter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Delete A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={2} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Delete Prerequisite\\" dialogHeader=\\"Delete A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to delete\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: deleteAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteDeleter>
              <TaskDeleter editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: deleteAction]} text=\\"Delete This Task\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: deleteAction]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete This Task
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
              </TaskDeleter>
              <TaskPositionInserter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <div className=\\"move-editor-buttons\\">
                  <Blueprint3.Select items={{...}} onItemSelect={[Function: changePosition]} itemRenderer={[Function: selectionsRenderer]} filterable={false}>
                    <Blueprint3.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: selectionsRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                      <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                        <Manager>
                          <span className=\\"bp3-popover-wrapper\\">
                            <Reference innerRef={[Function: target]}>
                              <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                  <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                    <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                      <Blueprint3.Button className=\\"move-button\\" text={1}>
                                        <button type=\\"button\\" className=\\"bp3-button move-button\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                          <Blueprint3.Icon icon={[undefined]} />
                                          <span className=\\"bp3-button-text\\">
                                            1
                                          </span>
                                          <Blueprint3.Icon icon={[undefined]} />
                                        </button>
                                      </Blueprint3.Button>
                                    </div>
                                  </span>
                                </Blueprint3.ResizeSensor>
                              </InnerReference>
                            </Reference>
                            <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                          </span>
                        </Manager>
                      </Blueprint3.Popover>
                    </Blueprint3.QueryList>
                  </Blueprint3.Select>
                  <Blueprint3.Button onClick={[Function: action]} text=\\"Change Position\\" disabled={false}>
                    <button type=\\"button\\" onClick={[Function: action]} disabled={[undefined]} className=\\"bp3-button\\" onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon={[undefined]} />
                      <span className=\\"bp3-button-text\\">
                        Change Position
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                </div>
              </TaskPositionInserter>
              <PrerequisitePositionEditor editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Change Prerequisite Pos\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Change Prerequisite Pos
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <PrerequisiteSwapper prerequisiteIdDs={{...}} inferencer={{...}} setDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: swapAction]} firstID={2} setFirstID={[Function: bound dispatchAction]} secondID={2} setSecondID={[Function: bound dispatchAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </PrerequisiteSwapper>
              </PrerequisitePositionEditor>
            </AchievementControlPanelTools>
          </div>
        </div>
      </EditableAchievementTask>
      <EditableAchievementTask achievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
        <div className=\\"edit-container\\">
          <div className=\\"main-cards\\">
            <AchievementTask id={8} inferencer={{...}} filterStatus=\\"ALL\\" displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
              <li>
                <AchievementCard id={8} inferencer={{...}} shouldPartiallyRender={false} isDropdownOpen={false} toggleDropdown={[Function: toggleDropdown]} displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
                  <div className=\\"achievement-card\\" style={{...}} onClick={[Function: onClick]} onClickCapture={[Function: toggleDropdown]}>
                    <div className=\\"dropdown-button\\">
                      <Blueprint3.Icon icon=\\"caret-right\\">
                        <span icon=\\"caret-right\\" className=\\"bp3-icon bp3-icon-caret-right\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"caret-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              caret-right
                            </desc>
                            <path d=\\"M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 006 4.5v7a.495.495 0 00.83.37l4-3.5c.1-.09.17-.22.17-.37z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                    </div>
                    <div className=\\"content\\">
                      <div className=\\"heading\\">
                        <h3>
                          POWER OF FRIENDSHIP
                        </h3>
                        <AchievementWeek week={[undefined]} intent=\\"warning\\">
                          <div className=\\"week\\">
                            <div />
                          </div>
                        </AchievementWeek>
                      </div>
                      <div className=\\"details\\">
                        <div className=\\"ability\\">
                          <p>
                            Community
                          </p>
                        </div>
                        <AchievementDeadline deadline={[undefined]} ability=\\"Community\\">
                          <div className=\\"deadline\\">
                            <Blueprint3.Icon icon=\\"stopwatch\\" color=\\"#000000\\">
                              <span icon=\\"stopwatch\\" className=\\"bp3-icon bp3-icon-stopwatch\\" title={[undefined]}>
                                <svg fill=\\"#000000\\" data-icon=\\"stopwatch\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    stopwatch
                                  </desc>
                                  <path d=\\"M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <span style={{...}}>
                              <p>
                                Unlimited
                              </p>
                            </span>
                          </div>
                        </AchievementDeadline>
                        <AchievementExp exp={100}>
                          <div className=\\"exp\\">
                            <Blueprint3.Icon icon=\\"bank-account\\">
                              <span icon=\\"bank-account\\" className=\\"bp3-icon bp3-icon-bank-account\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"bank-account\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    bank-account
                                  </desc>
                                  <path d=\\"M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <p>
                              100 XP
                            </p>
                          </div>
                        </AchievementExp>
                      </div>
                      <Blueprint3.ProgressBar className=\\"progress\\" intent={[undefined]} value={0.4} animate={false} stripes={false}>
                        <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes progress\\">
                          <div className=\\"bp3-progress-meter\\" style={{...}} />
                        </div>
                      </Blueprint3.ProgressBar>
                    </div>
                  </div>
                </AchievementCard>
              </li>
            </AchievementTask>
          </div>
          <div className=\\"editor-buttons\\">
            <AchievementControlPanelTools editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
              <PrerequisiteAdder editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Add A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Add A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={0} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Add Prerequisite\\" dialogHeader=\\"Add A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to add\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: addAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteAdder>
              <PrerequisiteDeleter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Delete A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={9} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Delete Prerequisite\\" dialogHeader=\\"Delete A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to delete\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: deleteAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteDeleter>
              <TaskDeleter editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: deleteAction]} text=\\"Delete This Task\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: deleteAction]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete This Task
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
              </TaskDeleter>
              <TaskPositionInserter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <div className=\\"move-editor-buttons\\">
                  <Blueprint3.Select items={{...}} onItemSelect={[Function: changePosition]} itemRenderer={[Function: selectionsRenderer]} filterable={false}>
                    <Blueprint3.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: selectionsRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                      <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                        <Manager>
                          <span className=\\"bp3-popover-wrapper\\">
                            <Reference innerRef={[Function: target]}>
                              <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                  <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                    <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                      <Blueprint3.Button className=\\"move-button\\" text={2}>
                                        <button type=\\"button\\" className=\\"bp3-button move-button\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                          <Blueprint3.Icon icon={[undefined]} />
                                          <span className=\\"bp3-button-text\\">
                                            2
                                          </span>
                                          <Blueprint3.Icon icon={[undefined]} />
                                        </button>
                                      </Blueprint3.Button>
                                    </div>
                                  </span>
                                </Blueprint3.ResizeSensor>
                              </InnerReference>
                            </Reference>
                            <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                          </span>
                        </Manager>
                      </Blueprint3.Popover>
                    </Blueprint3.QueryList>
                  </Blueprint3.Select>
                  <Blueprint3.Button onClick={[Function: action]} text=\\"Change Position\\" disabled={false}>
                    <button type=\\"button\\" onClick={[Function: action]} disabled={[undefined]} className=\\"bp3-button\\" onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon={[undefined]} />
                      <span className=\\"bp3-button-text\\">
                        Change Position
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                </div>
              </TaskPositionInserter>
              <PrerequisitePositionEditor editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Change Prerequisite Pos\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Change Prerequisite Pos
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <PrerequisiteSwapper prerequisiteIdDs={{...}} inferencer={{...}} setDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: swapAction]} firstID={9} setFirstID={[Function: bound dispatchAction]} secondID={9} setSecondID={[Function: bound dispatchAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </PrerequisiteSwapper>
              </PrerequisitePositionEditor>
            </AchievementControlPanelTools>
          </div>
        </div>
      </EditableAchievementTask>
      <EditableAchievementTask achievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
        <div className=\\"edit-container\\">
          <div className=\\"main-cards\\">
            <AchievementTask id={7} inferencer={{...}} filterStatus=\\"ALL\\" displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
              <li>
                <AchievementCard id={7} inferencer={{...}} shouldPartiallyRender={false} isDropdownOpen={false} toggleDropdown={[Function: toggleDropdown]} displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
                  <div className=\\"achievement-card\\" style={{...}} onClick={[Function: onClick]} onClickCapture={[Function: toggleDropdown]}>
                    <div className=\\"dropdown-button\\" />
                    <div className=\\"content\\">
                      <div className=\\"heading\\">
                        <h3>
                          THE SOURCE-RER
                        </h3>
                        <AchievementWeek week={{...}} intent=\\"warning\\">
                          <div className=\\"week\\">
                            <div>
                              <Blueprint3.Tag intent=\\"warning\\" round={true}>
                                <span className=\\"bp3-tag bp3-intent-warning bp3-round\\" tabIndex={[undefined]}>
                                  <Blueprint3.Icon icon={[undefined]} />
                                  <Blueprint3.Text className=\\"bp3-fill\\" ellipsize={true} tagName=\\"span\\">
                                    <span className=\\"bp3-text-overflow-ellipsis bp3-fill\\" title={[undefined]}>
                                      Week 2
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon icon={[undefined]} />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </div>
                        </AchievementWeek>
                      </div>
                      <div className=\\"details\\">
                        <div className=\\"ability\\">
                          <p>
                            Effort
                          </p>
                        </div>
                        <AchievementDeadline deadline={{...}} ability=\\"Effort\\">
                          <div className=\\"deadline\\">
                            <Blueprint3.Icon icon=\\"stopwatch\\" color=\\"#000000\\">
                              <span icon=\\"stopwatch\\" className=\\"bp3-icon bp3-icon-stopwatch\\" title={[undefined]}>
                                <svg fill=\\"#000000\\" data-icon=\\"stopwatch\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    stopwatch
                                  </desc>
                                  <path d=\\"M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <span style={{...}}>
                              <p>
                                5 Weeks
                              </p>
                            </span>
                          </div>
                        </AchievementDeadline>
                        <AchievementExp exp={400}>
                          <div className=\\"exp\\">
                            <Blueprint3.Icon icon=\\"bank-account\\">
                              <span icon=\\"bank-account\\" className=\\"bp3-icon bp3-icon-bank-account\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"bank-account\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    bank-account
                                  </desc>
                                  <path d=\\"M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <p>
                              400 XP
                            </p>
                          </div>
                        </AchievementExp>
                      </div>
                      <Blueprint3.ProgressBar className=\\"progress\\" intent={[undefined]} value={0.4725} animate={false} stripes={false}>
                        <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes progress\\">
                          <div className=\\"bp3-progress-meter\\" style={{...}} />
                        </div>
                      </Blueprint3.ProgressBar>
                    </div>
                  </div>
                </AchievementCard>
              </li>
            </AchievementTask>
          </div>
          <div className=\\"editor-buttons\\">
            <AchievementControlPanelTools editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
              <PrerequisiteAdder editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Add A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Add A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={0} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Add Prerequisite\\" dialogHeader=\\"Add A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to add\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: addAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteAdder>
              <PrerequisiteDeleter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Delete A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={0} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Delete Prerequisite\\" dialogHeader=\\"Delete A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to delete\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: deleteAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteDeleter>
              <TaskDeleter editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: deleteAction]} text=\\"Delete This Task\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: deleteAction]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete This Task
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
              </TaskDeleter>
              <TaskPositionInserter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <div className=\\"move-editor-buttons\\">
                  <Blueprint3.Select items={{...}} onItemSelect={[Function: changePosition]} itemRenderer={[Function: selectionsRenderer]} filterable={false}>
                    <Blueprint3.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: selectionsRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                      <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                        <Manager>
                          <span className=\\"bp3-popover-wrapper\\">
                            <Reference innerRef={[Function: target]}>
                              <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                  <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                    <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                      <Blueprint3.Button className=\\"move-button\\" text={3}>
                                        <button type=\\"button\\" className=\\"bp3-button move-button\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                          <Blueprint3.Icon icon={[undefined]} />
                                          <span className=\\"bp3-button-text\\">
                                            3
                                          </span>
                                          <Blueprint3.Icon icon={[undefined]} />
                                        </button>
                                      </Blueprint3.Button>
                                    </div>
                                  </span>
                                </Blueprint3.ResizeSensor>
                              </InnerReference>
                            </Reference>
                            <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                          </span>
                        </Manager>
                      </Blueprint3.Popover>
                    </Blueprint3.QueryList>
                  </Blueprint3.Select>
                  <Blueprint3.Button onClick={[Function: action]} text=\\"Change Position\\" disabled={false}>
                    <button type=\\"button\\" onClick={[Function: action]} disabled={[undefined]} className=\\"bp3-button\\" onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon={[undefined]} />
                      <span className=\\"bp3-button-text\\">
                        Change Position
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                </div>
              </TaskPositionInserter>
              <PrerequisitePositionEditor editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Change Prerequisite Pos\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Change Prerequisite Pos
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <PrerequisiteSwapper prerequisiteIdDs={{...}} inferencer={{...}} setDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: swapAction]} firstID={0} setFirstID={[Function: bound dispatchAction]} secondID={0} setSecondID={[Function: bound dispatchAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </PrerequisiteSwapper>
              </PrerequisitePositionEditor>
            </AchievementControlPanelTools>
          </div>
        </div>
      </EditableAchievementTask>
      <EditableAchievementTask achievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
        <div className=\\"edit-container\\">
          <div className=\\"main-cards\\">
            <AchievementTask id={4} inferencer={{...}} filterStatus=\\"ALL\\" displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
              <li>
                <AchievementCard id={4} inferencer={{...}} shouldPartiallyRender={false} isDropdownOpen={false} toggleDropdown={[Function: toggleDropdown]} displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
                  <div className=\\"achievement-card\\" style={{...}} onClick={[Function: onClick]} onClickCapture={[Function: toggleDropdown]}>
                    <div className=\\"dropdown-button\\">
                      <Blueprint3.Icon icon=\\"caret-right\\">
                        <span icon=\\"caret-right\\" className=\\"bp3-icon bp3-icon-caret-right\\" title={[undefined]}>
                          <svg fill={[undefined]} data-icon=\\"caret-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                            <desc>
                              caret-right
                            </desc>
                            <path d=\\"M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 006 4.5v7a.495.495 0 00.83.37l4-3.5c.1-.09.17-.22.17-.37z\\" fillRule=\\"evenodd\\" />
                          </svg>
                        </span>
                      </Blueprint3.Icon>
                    </div>
                    <div className=\\"content\\">
                      <div className=\\"heading\\">
                        <h3>
                          CURVE WIZARD
                        </h3>
                        <AchievementWeek week={{...}} intent=\\"warning\\">
                          <div className=\\"week\\">
                            <div>
                              <Blueprint3.Tag intent=\\"warning\\" round={true}>
                                <span className=\\"bp3-tag bp3-intent-warning bp3-round\\" tabIndex={[undefined]}>
                                  <Blueprint3.Icon icon={[undefined]} />
                                  <Blueprint3.Text className=\\"bp3-fill\\" ellipsize={true} tagName=\\"span\\">
                                    <span className=\\"bp3-text-overflow-ellipsis bp3-fill\\" title={[undefined]}>
                                      Week 4
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon icon={[undefined]} />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </div>
                        </AchievementWeek>
                      </div>
                      <div className=\\"details\\">
                        <div className=\\"ability\\">
                          <p>
                            Core
                          </p>
                        </div>
                        <AchievementDeadline deadline={{...}} ability=\\"Core\\">
                          <div className=\\"deadline\\">
                            <Blueprint3.Icon icon=\\"stopwatch\\" color=\\"#000000\\">
                              <span icon=\\"stopwatch\\" className=\\"bp3-icon bp3-icon-stopwatch\\" title={[undefined]}>
                                <svg fill=\\"#000000\\" data-icon=\\"stopwatch\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    stopwatch
                                  </desc>
                                  <path d=\\"M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <span style={{...}}>
                              <p>
                                6 Weeks
                              </p>
                            </span>
                          </div>
                        </AchievementDeadline>
                        <AchievementExp exp={600}>
                          <div className=\\"exp\\">
                            <Blueprint3.Icon icon=\\"bank-account\\">
                              <span icon=\\"bank-account\\" className=\\"bp3-icon bp3-icon-bank-account\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"bank-account\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    bank-account
                                  </desc>
                                  <path d=\\"M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <p>
                              600 XP
                            </p>
                          </div>
                        </AchievementExp>
                      </div>
                      <Blueprint3.ProgressBar className=\\"progress\\" intent={[undefined]} value={0.2833333333333333} animate={false} stripes={false}>
                        <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes progress\\">
                          <div className=\\"bp3-progress-meter\\" style={{...}} />
                        </div>
                      </Blueprint3.ProgressBar>
                    </div>
                  </div>
                </AchievementCard>
              </li>
            </AchievementTask>
          </div>
          <div className=\\"editor-buttons\\">
            <AchievementControlPanelTools editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
              <PrerequisiteAdder editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Add A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Add A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={0} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Add Prerequisite\\" dialogHeader=\\"Add A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to add\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: addAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteAdder>
              <PrerequisiteDeleter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Delete A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={5} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Delete Prerequisite\\" dialogHeader=\\"Delete A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to delete\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: deleteAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteDeleter>
              <TaskDeleter editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: deleteAction]} text=\\"Delete This Task\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: deleteAction]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete This Task
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
              </TaskDeleter>
              <TaskPositionInserter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <div className=\\"move-editor-buttons\\">
                  <Blueprint3.Select items={{...}} onItemSelect={[Function: changePosition]} itemRenderer={[Function: selectionsRenderer]} filterable={false}>
                    <Blueprint3.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: selectionsRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                      <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                        <Manager>
                          <span className=\\"bp3-popover-wrapper\\">
                            <Reference innerRef={[Function: target]}>
                              <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                  <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                    <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                      <Blueprint3.Button className=\\"move-button\\" text={4}>
                                        <button type=\\"button\\" className=\\"bp3-button move-button\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                          <Blueprint3.Icon icon={[undefined]} />
                                          <span className=\\"bp3-button-text\\">
                                            4
                                          </span>
                                          <Blueprint3.Icon icon={[undefined]} />
                                        </button>
                                      </Blueprint3.Button>
                                    </div>
                                  </span>
                                </Blueprint3.ResizeSensor>
                              </InnerReference>
                            </Reference>
                            <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                          </span>
                        </Manager>
                      </Blueprint3.Popover>
                    </Blueprint3.QueryList>
                  </Blueprint3.Select>
                  <Blueprint3.Button onClick={[Function: action]} text=\\"Change Position\\" disabled={false}>
                    <button type=\\"button\\" onClick={[Function: action]} disabled={[undefined]} className=\\"bp3-button\\" onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon={[undefined]} />
                      <span className=\\"bp3-button-text\\">
                        Change Position
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                </div>
              </TaskPositionInserter>
              <PrerequisitePositionEditor editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Change Prerequisite Pos\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Change Prerequisite Pos
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <PrerequisiteSwapper prerequisiteIdDs={{...}} inferencer={{...}} setDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: swapAction]} firstID={5} setFirstID={[Function: bound dispatchAction]} secondID={5} setSecondID={[Function: bound dispatchAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </PrerequisiteSwapper>
              </PrerequisitePositionEditor>
            </AchievementControlPanelTools>
          </div>
        </div>
      </EditableAchievementTask>
      <EditableAchievementTask achievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
        <div className=\\"edit-container\\">
          <div className=\\"main-cards\\">
            <AchievementTask id={10} inferencer={{...}} filterStatus=\\"ALL\\" displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
              <li>
                <AchievementCard id={10} inferencer={{...}} shouldPartiallyRender={false} isDropdownOpen={false} toggleDropdown={[Function: toggleDropdown]} displayModal={[Function: displayModal]} handleGlow={[Function: handleGlow]}>
                  <div className=\\"achievement-card\\" style={{...}} onClick={[Function: onClick]} onClickCapture={[Function: toggleDropdown]}>
                    <div className=\\"dropdown-button\\" />
                    <div className=\\"content\\">
                      <div className=\\"heading\\">
                        <h3>
                          THAT&#39;S THE SPIRIT
                        </h3>
                        <Blueprint3.Icon icon=\\"confirm\\" intent=\\"success\\" style={{...}}>
                          <span icon=\\"confirm\\" style={{...}} className=\\"bp3-icon bp3-icon-confirm bp3-intent-success\\" title={[undefined]}>
                            <svg fill={[undefined]} data-icon=\\"confirm\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                              <desc>
                                confirm
                              </desc>
                              <path d=\\"M8.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42l-4.29 4.3L8.7 4.29zm5.22 3.01c.03.23.07.45.07.69 0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6c.81 0 1.59.17 2.3.46l1.5-1.5A7.998 7.998 0 00-.01 7.99c0 4.42 3.58 8 8 8s8-3.58 8-8c0-.83-.13-1.64-.36-2.39l-1.71 1.7z\\" fillRule=\\"evenodd\\" />
                            </svg>
                          </span>
                        </Blueprint3.Icon>
                      </div>
                      <div className=\\"details\\">
                        <div className=\\"ability\\">
                          <p>
                            Exploration
                          </p>
                        </div>
                        <AchievementDeadline deadline={[undefined]} ability=\\"Exploration\\">
                          <div className=\\"deadline\\">
                            <Blueprint3.Icon icon=\\"stopwatch\\" color=\\"#000000\\">
                              <span icon=\\"stopwatch\\" className=\\"bp3-icon bp3-icon-stopwatch\\" title={[undefined]}>
                                <svg fill=\\"#000000\\" data-icon=\\"stopwatch\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    stopwatch
                                  </desc>
                                  <path d=\\"M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <span style={{...}}>
                              <p>
                                Unlimited
                              </p>
                            </span>
                          </div>
                        </AchievementDeadline>
                        <AchievementExp exp={100}>
                          <div className=\\"exp\\">
                            <Blueprint3.Icon icon=\\"bank-account\\">
                              <span icon=\\"bank-account\\" className=\\"bp3-icon bp3-icon-bank-account\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"bank-account\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                  <desc>
                                    bank-account
                                  </desc>
                                  <path d=\\"M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint3.Icon>
                            <p>
                              100 XP
                            </p>
                          </div>
                        </AchievementExp>
                      </div>
                      <Blueprint3.ProgressBar className=\\"progress\\" intent=\\"success\\" value={1} animate={false} stripes={false}>
                        <div className=\\"bp3-progress-bar bp3-intent-success bp3-no-animation bp3-no-stripes progress\\">
                          <div className=\\"bp3-progress-meter\\" style={{...}} />
                        </div>
                      </Blueprint3.ProgressBar>
                    </div>
                  </div>
                </AchievementCard>
              </li>
            </AchievementTask>
          </div>
          <div className=\\"editor-buttons\\">
            <AchievementControlPanelTools editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
              <PrerequisiteAdder editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Add A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Add A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={0} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Add Prerequisite\\" dialogHeader=\\"Add A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to add\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: addAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Add A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteAdder>
              <PrerequisiteDeleter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Delete A Prerequisite\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete A Prerequisite
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <AchievementSelector selections={{...}} inferencer={{...}} selectedId={0} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Delete Prerequisite\\" dialogHeader=\\"Delete A Prerequisite\\" emptySelectionsMessage=\\"You have no more prerequisites to delete\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: deleteAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Delete A Prerequisite\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </AchievementSelector>
              </PrerequisiteDeleter>
              <TaskDeleter editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: deleteAction]} text=\\"Delete This Task\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: deleteAction]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Delete This Task
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
              </TaskDeleter>
              <TaskPositionInserter editableAchievement={{...}} setEditableAchievement={[Function: bound dispatchAction]} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <div className=\\"move-editor-buttons\\">
                  <Blueprint3.Select items={{...}} onItemSelect={[Function: changePosition]} itemRenderer={[Function: selectionsRenderer]} filterable={false}>
                    <Blueprint3.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function: selectionsRenderer]} renderer={[Function (anonymous)]} disabled={false} resetOnQuery={true}>
                      <Blueprint3.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp3-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                        <Manager>
                          <span className=\\"bp3-popover-wrapper\\">
                            <Reference innerRef={[Function: target]}>
                              <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function: target]}>
                                <Blueprint3.ResizeSensor onResize={[Function (anonymous)]}>
                                  <span onClick={[Function (anonymous)]} className=\\"bp3-popover-target\\">
                                    <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                      <Blueprint3.Button className=\\"move-button\\" text={5}>
                                        <button type=\\"button\\" className=\\"bp3-button move-button\\" disabled={[undefined]} onClick={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                          <Blueprint3.Icon icon={[undefined]} />
                                          <span className=\\"bp3-button-text\\">
                                            5
                                          </span>
                                          <Blueprint3.Icon icon={[undefined]} />
                                        </button>
                                      </Blueprint3.Button>
                                    </div>
                                  </span>
                                </Blueprint3.ResizeSensor>
                              </InnerReference>
                            </Reference>
                            <Blueprint3.Overlay autoFocus={false} backdropClassName=\\"bp3-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp3-popover\\" usePortal={true} portalContainer={[undefined]} lazy={true} />
                          </span>
                        </Manager>
                      </Blueprint3.Popover>
                    </Blueprint3.QueryList>
                  </Blueprint3.Select>
                  <Blueprint3.Button onClick={[Function: action]} text=\\"Change Position\\" disabled={false}>
                    <button type=\\"button\\" onClick={[Function: action]} disabled={[undefined]} className=\\"bp3-button\\" onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                      <Blueprint3.Icon icon={[undefined]} />
                      <span className=\\"bp3-button-text\\">
                        Change Position
                      </span>
                      <Blueprint3.Icon icon={[undefined]} />
                    </button>
                  </Blueprint3.Button>
                </div>
              </TaskPositionInserter>
              <PrerequisitePositionEditor editableAchievement={{...}} inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
                <Blueprint3.Button className=\\"editor-button\\" onClick={[Function: toggleDialogOpen]} text=\\"Change Prerequisite Pos\\">
                  <button type=\\"button\\" className=\\"bp3-button editor-button\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                    <Blueprint3.Icon icon={[undefined]} />
                    <span className=\\"bp3-button-text\\">
                      Change Prerequisite Pos
                    </span>
                    <Blueprint3.Icon icon={[undefined]} />
                  </button>
                </Blueprint3.Button>
                <PrerequisiteSwapper prerequisiteIdDs={{...}} inferencer={{...}} setDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: swapAction]} firstID={0} setFirstID={[Function: bound dispatchAction]} secondID={0} setSecondID={[Function: bound dispatchAction]}>
                  <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true}>
                    <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Swap\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                  </Blueprint3.Dialog>
                </PrerequisiteSwapper>
              </PrerequisitePositionEditor>
            </AchievementControlPanelTools>
          </div>
        </div>
      </EditableAchievementTask>
    </ul>
    <div>
      <TaskUploader pendingUpload={[Function: pendingUpload]} uploadChanges={[Function: handleUploadChanges]}>
        <Blueprint3.Button className=\\"main-adder\\" icon=\\"export\\" text=\\"Publish changes\\" intent=\\"primary\\" onClick={[Function: handleUploadChanges]}>
          <button type=\\"button\\" className=\\"bp3-button bp3-intent-primary main-adder\\" onClick={[Function: handleUploadChanges]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
            <Blueprint3.Icon icon=\\"export\\">
              <span icon=\\"export\\" className=\\"bp3-icon bp3-icon-export\\" title={[undefined]}>
                <svg fill={[undefined]} data-icon=\\"export\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                  <desc>
                    export
                  </desc>
                  <path d=\\"M4 6c.28 0 .53-.11.71-.29L7 3.41V11c0 .55.45 1 1 1s1-.45 1-1V3.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53.11 8.28 0 8 0s-.53.11-.71.29l-4 4A1.003 1.003 0 004 6zm11 5c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                </svg>
              </span>
            </Blueprint3.Icon>
            <span className=\\"bp3-button-text\\">
              Publish changes
            </span>
            <Blueprint3.Icon icon={[undefined]} />
          </button>
        </Blueprint3.Button>
      </TaskUploader>
      <TaskAdder inferencer={{...}} saveChanges={[Function: handleSaveChanges]}>
        <Blueprint3.Button className=\\"main-adder\\" onClick={[Function: toggleDialogOpen]} text=\\"Add A Task\\">
          <button type=\\"button\\" className=\\"bp3-button main-adder\\" onClick={[Function: toggleDialogOpen]} disabled={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
            <Blueprint3.Icon icon={[undefined]} />
            <span className=\\"bp3-button-text\\">
              Add A Task
            </span>
            <Blueprint3.Icon icon={[undefined]} />
          </button>
        </Blueprint3.Button>
        <AchievementSelector selections={{...}} inferencer={{...}} selectedId={1} setSelectedId={[Function: bound dispatchAction]} buttonText=\\"Add Task\\" dialogHeader=\\"Add A Task\\" emptySelectionsMessage=\\"You have no more tasks to add\\" toggleDialogOpen={[Function: toggleDialogOpen]} isDialogOpen={false} action={[Function: addAction]}>
          <Blueprint3.Dialog onClose={[Function: toggleDialogOpen]} className=\\"task-selector\\" isOpen={false} title=\\"Add A Task\\" canOutsideClickClose={true}>
            <Blueprint3.Overlay onClose={[Function: toggleDialogOpen]} className=\\"bp3-overlay-scroll-container\\" isOpen={false} title=\\"Add A Task\\" canOutsideClickClose={true} hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
          </Blueprint3.Dialog>
        </AchievementSelector>
      </TaskAdder>
    </div>
  </div>
</AchievementControlPanel>"
`;
